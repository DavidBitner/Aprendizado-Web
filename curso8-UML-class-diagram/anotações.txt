A modelagem de dominio está presente em três disciplinas do desenvolvimento de software:
Business Modelling.
Requirements.
Analysis & Design.


Dominio: É a área de negócio observada, exemplo padaria.
Modelo de dominio: É um modelo que descreve as entidades (classes) do dominio e as inter-relações entre elas.

Existem 4 diferentes niveis de abstração do modelo de dominio:
Conceitual de análise de negócio.
Conceitual de análise de sistema.
Lógico ou de design.
Fisico ou de implementação.


Modelo conceitual: 
É um modelo que descreve a estrutura das informaç~çoes que o sistema vai gerenciar.
É o modelo de dominio em nível de análise.
Pertence ao escopo do problema e não ao escopo da solução.
Independe de paradigma.
Independe de tecnologia.
O modelo conceitual descreve conceitos, atributos e associações.

Conceito: 
Conceito pode ser qualquer entidade que tenha um significado para o sistema e que tenha uma necessidade de armazenamento de dados.
Exemplo: Cliente, pedido, produto, fornecedor.

Atributo: 
Informações alfanuméricas simples, como números, textos e datas contidas em cada conceito.
Exemplo: Conceito produto, atributos descrição e preço. Conceito cliente, atributos, nome, email, telefone e cpf.

Associação:
Associação é um relacionamento estático entre dois conceitos.
Associações possuem três caracteristicas, nome da associação (tem, possui), papel (dono, autor, fornecedor), e multiplicidade.


Instância: As ocorrências dos conceitos recebem o nome de instância ou objeto.


Multiplicidade:
É a quantidade minima e máxima de objetos que uma associação permite em cada um de seus papéis.

Para encontrar uma multiplicidade faz-se a pergunta:
1 <conceito> pode ter quantos <papel>?
1 carro pode ter quantos donos?
1 pessoa pode ter quantos carros?

Um para um: Em ambos os lados o máximo é um.
Muitos para muitos: em ambos os lados o máximo é vários.
Um para muitos: Em um dos lados o máximo é 1, no outro lado o máximo é varios.

Possíveis multiplicidades:
"," significa "ou".
".." significa "a".
"*" significa "vários" (sem limite especifico).

a) 1       exatamente um.
b) 2       exatamente dois.
c) 0..1    zero ou um.
d) 0..*    zero ou mais.
e) *       zero ou mais.
f) 1..*    um ou mais.
g) 2..*    dois ou mais.
h) 2..5    de dois a cinco.
i) 2,5     dois ou cinco.
j) 2,5..8  dois ou cinco a oito.


Associação obrigatória: Uma associação é obrigatória se o conceito associado desempenha um papel de multiplicidade mínima maior que zero.
Conceito dependente: Um conceito é dependente se ele possuir pelo menos uma associação obrigatória.
Associações multiplas: É quando dois conceitos possuem mais de uma associação.
Autoassociação: É quando um conceito é associado com ele mesmo.


Associação todo-parte: Quando um conceito é parte de outro que representa um todo, se desenha um diamante do lado todo.
Diamante branco: "Agragação". O conceito parte não é exclusivo e pode ser usado em mais de um todo.
Diamante preto: "Composição". O conceito parte é exclusivo de um todo.


Classe de associação: 
É uma classe que serve de intermediário entre duas outras classes.
Caso uma associação de muitos-para-muitos tenha um atributo que pode pertencer a ambas as classes, é criado um novo conceito intermediário entre as duas classes.


Enumerações:
Uma enumeração pode ser considerada um "meio termo" entre um conceito e um atributo.
Uma enumeração representa um conceito que possui um número finito de valores possíveis, valores estes que, para o negócio, valem a pena ser descritos.

Tipos primitivos:
Também podem ser considerados um "meio termo" entre um conceito e um atributo.
É um conceito que, devido a sua simplicidade, "não merece" ser modelado como um conceito comum no diagrama do modelo conceitual.
Sua regra de formação é meramente sintática e não depende de nenhum dado do sistema.
Tipicamente não possui identificador.


Herança: 
Existe herança quando um conceito possui estruturas comuns originadas dele.
A herança é uma associação de classes, e não de objetos (não há duas instâncias a serem ligadas). Um objeto comporta todas as informações, tanto do conceito genérico quando dos conceitos especificos.

Definições:
Relação É-UM: Quando uma classe herda outra.
Relação de generalização: O conceito genérico é uma generalização dos conceitos especificos.
Relação de especialização:  Os conceitos especificos são uma especialização do conceito genérico.
Superclasse: O conceito genérico é a superclasse.
Subclasse: Os conceitos especificos são as subclasses.
Extensão: Os conceitos especificos são extensões do conceito genérico.
Pode adicionar elementos: Os conceitos especificos adicionam elementos ao conceito genérico.
Não pode remover elementos: Os conceitos especificos não podem eliminar elementos do conceito genérico.

Herança total:
É possível criar apenas instâncias das subclasses.
Quando criar o diagrama de classes, a herança total é representada por uma classe abstrata (UML = classe com nome itálico).
A superclasse é a classe abstrata.


Entidade fraca: 
É quando um conceito depende de outro. 
Só existe quando o conceito "forte" for criado.
É um conceito simples que não pode ser um atributo dentro de uma classe, porém não pode existir sem a criação de uma instância de um conceito.


Associação direcionada:
É quando existe uma associação de um conceito para outro, porém não existe associação do outro conceito para o um.
Um cliente possui um telefone, porém através do telefone não é possível consultar o cliente.


Chave primária: 
É o atributo que define uma instância.
Representado no diagrama pelo estereótipo "<<oid>>" ou "<<pk>>".

Chaves candidatas: 
São os atributos que podem definir uma instância, pois são unicos. 
Representados no diagrama pelo estereótipo "<<unique>>".
